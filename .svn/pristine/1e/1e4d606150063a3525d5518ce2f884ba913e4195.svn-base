<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.dao.SystemMapper">
	<select id="findFuncsById" parameterType="int" resultMap="systemMap">
		select id,func_name,func_code,pid from t_t_func where pid = #{id} 
	</select>
	<select id="findAllPermissions" resultType="int">
		select count(*) from t_t_permission
	</select>
	<select id="findPartPermissions" parameterType="map" resultType="int">
		select count(*) from t_t_permission
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						name LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.plevel != null and map.plevel != ''">
						plevel = #{map.plevel} and
					</if>
				</trim> 
		</where>
	</select>
	<select id="findPagePermissions" parameterType="map" resultType="Permission">
		select id,pname,pcode,pid,plevel from t_t_permission
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						name LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.plevel != null and map.plevel != ''">
						plevel = #{map.plevel} and
					</if>
				</trim> 
		</where>
		order by id
		limit #{map.start},#{map.end}
	</select>
	<select id="findPageRoles" parameterType="map" resultType="Role">
		select id,rolename,rolecode,pid,rlevel from t_t_role
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						rolename LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.level != null and map.level != ''">
						rlevel = #{map.plevel} and
					</if>
				</trim> 
		</where>
		order by id
		limit #{map.start},#{map.end}
	</select>
	<select id="findPartRoles" parameterType="map" resultType="int">
		select count(*) from t_t_role
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						name LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.level != null and map.level != ''">
						rlevel = #{map.level} and
					</if>
				</trim> 
		</where>
	</select>
	<select id="findAllUsers" resultType="int">
		select count(*) from t_t_User
	</select>
	<select id="findPartUsers" parameterType="map" resultType="int">
		select count(*) from t_t_User
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						name LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.ident != null and map.ident != ''">
						ident LIKE concat(concat('%',#{map.ident}),'%') and
					</if>
				</trim> 
		</where>
	</select>

	<select id="findPageUsers" parameterType="map" resultType="User">
		select tu.username,tu.name,tu.age,tu.phone,tu.address,tr.rolename as ident,tu.email from t_t_user tu 
		left join t_t_user_role tur on tu.id = tur.user_id 
		left join t_t_role tr on tur.role_id = tr.id
		<where>
			<trim suffixOverrides="and">
					<if test="map.name != null and map.name != ''">
						tu.name LIKE concat(concat('%',#{map.name}),'%') and
					</if>
					<if test="map.ident != null and map.ident != ''">
						ident LIKE concat(concat('%',#{map.ident}),'%') and
					</if>
				</trim> 
		</where>
		order by tu.id
		limit #{map.start},#{map.end}
	</select>
	<select id="getRoorPermission" resultType="Permission">
		select id,pname,pcode,pid,plevel,url from t_t_permission where id = 1
	</select>
	<select id="findPersById" parameterType="int"  resultType="Permission">
		select id,pname,pcode,pid,plevel,url from t_t_permission where pid = #{id}
	</select>
	<select id="findPersonalPersById" parameterType="int"  resultType="Permission">
		select id,pname,pcode,pid,plevel,url from t_t_permission where id in (
		SELECT per_id FROM t_t_role_per WHERE role_id = #{mid} and useful = 1)
	</select>
	<select id="findPersonalPer" parameterType="map"  resultType="int">
		select count(*) from t_t_role_per where role_id = #{map.rid} and per_id = #{map.mid}
	</select>
	<select id="addRolePers" parameterType="map">
		insert into t_t_role_per(role_id,per_id)values(#{map.rid},#{map.mid})
	</select>
	<select id="updateRolePers1" parameterType="map" >
		update t_t_role_per set useful = 1 where  role_id = #{map.rid} and per_id = #{map.mid}
	</select>
	<select id="findAllRolePers" parameterType="String" resultType="Role" >
		select tr.rolename,tr.rolecode from  t_t_role tr
		left join t_t_role_per trp on tr.id = trp.role_id
		left join t_t_permission tp on trp.per_id = tp.id
		where tp.url = #{url}
	</select>
	<select id="findAllPers" resultType="Permission" >
		SELECT DISTINCT tp.pcode,tp.pname,tp.url FROM  t_t_role tr
		LEFT JOIN t_t_role_per trp ON tr.id = trp.role_id
		LEFT JOIN t_t_permission tp ON trp.per_id = tp.id
		WHERE tp.url IS NOT NULL
	</select>
	<update id="updateRolePers0" parameterType="int" >
		update t_t_role_per set useful = 0 where  role_id = #{rid}
	</update>
	<resultMap type="Func" id="systemMap">
		<id property="id" column="id"/>
  		<result property="funcName" column="func_name"/>
  		<result property="funcCode" column="func_code"/>
  		<result property="pid" column="pid"/>
	</resultMap>
</mapper>
